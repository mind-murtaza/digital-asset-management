# ============================================================================
# .env.example â€” Digital Asset Management (Monorepo)
# Copy this file to `.env` and replace ALL <placeholders>.
# Notes:
# - All values are strings; booleans like "true"/"false" are parsed by your app.
# - Never commit your real `.env`.
# ============================================================================

# =====================================
# Application
# =====================================
# One of: development | test | production
NODE_ENV=development

# Free-form app label (quotes required if it has spaces)
APP_NAME="Digital Asset Management"

# API HTTP port
PORT=4000

# Comma-separated list of allowed origins (no spaces). Use exact origins in prod.
# Example: https://app.example.com,https://admin.example.com
CORS_ORIGIN=http://localhost:3000,http://localhost:5173

# =====================================
# Database (MongoDB)
# =====================================
# Full connection string (SRV or standard). Do NOT commit real credentials.
# If you specify MONGO_DB separately, keep the trailing "/" and omit "defaultAuthDb".
# Example (SRV): mongodb+srv://<user>:<pass>@<cluster-host>/?retryWrites=true&w=majority
MONGO_URI=mongodb+srv://<username>:<password>@<cluster-host>/

# Logical DB name used by the app (collections live under this db)
MONGO_DB=digital_assets_db

# "true" enables verbose Mongoose logs; set to "false" in production
MONGOOSE_DEBUG=true

# =====================================
# Authentication / JWT
# =====================================
# Use a strong, random value (>= 64 chars). Rotate on compromise.
JWT_SECRET=<generate-a-strong-long-secret>

# Access token expiry (seconds). 86400 = 24h
ACCESS_TOKEN_EXPIRY=86400

# JWT issuer (iss) and audience (aud) claims
ISSUER=dam.api
AUDIENCE=dam.users

# =====================================
# Redis
# =====================================
# Hostname/IP and port of Redis instance
REDIS_HOST=localhost
REDIS_PORT=6379

# Password if your Redis requires auth; leave blank if none
REDIS_PASSWORD=<redis-password-or-empty>

# Numeric DB index (0-15 typical)
REDIS_DB=0

# Optional prefix for namespacing keys
REDIS_KEY_PREFIX=dam:

# =====================================
# Object Storage (S3 / MinIO)
# =====================================
# Internal endpoint used by the server. For MinIO local: http://localhost:9000
S3_ENDPOINT=http://localhost:9000

# Public endpoint used to rewrite presigned URLs (what the browser hits)
S3_PUBLIC_ENDPOINT=http://localhost:9000

# Programmatic credentials (do NOT commit real keys)
S3_ACCESS_KEY_ID=<s3-access-key-id>
S3_SECRET_ACCESS_KEY=<s3-secret-access-key>

# Target bucket and region (region is ignored by MinIO but required by AWS SDK)
S3_BUCKET_NAME=dam-assets
S3_REGION=us-east-1

# MinIO requires path-style URLs (true). For AWS S3, set to "false".
S3_FORCE_PATH_STYLE=true

# Optimization to skip headObject checks in dev/test (true/false)
SKIP_STORAGE_HEAD=true

# =====================================
# Logging
# =====================================
# One of: error | warn | info | debug (use "info" or "warn" in production)
LOG_LEVEL=debug

# =====================================
# Documentation / Support
# =====================================
# Public contact for support
CONTACT_EMAIL=<support@example.com>

# NOTE: Original variable appears misspelled; keeping it for compatibility.
# If your code uses the correct spelling, define both (or fix the code).
GITHUB_REPOSETORY_URL=https://github.com/<org-or-user>/<repo>
# GITHUB_REPOSITORY_URL=https://github.com/<org-or-user>/<repo>

# =====================================
# Workers / Processing
# =====================================
# Number of concurrent jobs processed by worker(s)
WORKER_CONCURRENCY=3

# Paths to ffmpeg/ffprobe binaries (inside container or host)
FFMPEG_PATH=/usr/bin/ffmpeg
FFPROBE_PATH=/usr/bin/ffprobe

# Preset name used by your video pipeline (e.g., ultrafast, veryfast, fast, medium)
VIDEO_PROCESSING_PRESET=fast

# Health check server (enable in containerized/prod environments)
ENABLE_HEALTH_CHECK=false
HEALTH_CHECK_PORT=3002

# Extra worker heartbeat logs (verbose)
LOG_WORKER_STATUS=false

# Max upload size in BYTES (5 GiB shown). Adjust to your infra limits.
MAX_FILE_SIZE_BYTES=5368709120

# =====================================
# Tests / Local tooling
# =====================================
# Base URL used by integration/e2e tests
API_BASE_URL=http://localhost:4000
